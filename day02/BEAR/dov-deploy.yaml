---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dov-deploy
  namespace: myns
  labels:
    app: dov
spec:
  replicas: 2
  selector: 
    matchLabels: #selector use this to select which pod template to use, k8 will check matchLabels against podTemplate label
      app: dov-bear
      env: test
  template:
    metadata:
      name: dov-pod
      namespace: myns
      labels:
        app: dov-bear
        env: test
    spec: 
      containers:
      - name: dov-container
        image: chukmunnlee/dov-bear:v5
        imagePullPolicy: IfNotPresent
        # env: 
        # - name: INSTANCE_NAME
        #   value: "not_my_dov_bear"
        # - name: INSTANCE_HASH
        #   valueFrom:
        #     fieldRef:
        #       fieldPath:  status.podIP
        envFrom:
        - configMapRef:
            name: dov-cm
        - secretRef:
            name: dov-secret
        ports:
        - containerPort: 3000        
        
        resources: #influence scheduling
          requests:
            memory: 100M
            cpu: 200m
          limits:
            memory: 100M
            cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: dov-svc
  namespace: myns
  labels:
    app: dov
spec:
  type: ClusterIP
  selector:
    app: dov-bear
    env: test
  ports:
  - name: web
    port: 8080       # Service port
    targetPort: 3000 # Container port


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dov-ing
  namespace: myns
  labels:
    app: dov
spec:
  ingressClassName: nginx
  rules:
  - host: dov-146.190.201.32.nip.io #must put else will match anything
    http:
      paths:
      - path: / #any request starting with / will come here
        pathType: Prefix
        backend:
          service:
            name: dov-svc
            port:
              number: 8080
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dov-hpa
  namespace: myns
  labels:
    app: dov
spec:
  minReplicas: 1
  maxReplicas: 4
  scaleTargetRef:
    apiVersion: apps/v1 
    kind: deployment
    name: dov-deploy
  metrics:
    - type: Resource
      resource: 
        name: cpu
        target: 
          type: Utilization
          averageUtilization: 35
    - type: Resource
      resource: 
        name: memory
        target: 
          type: Utilization
          averageUtilization: 35
  #behavior: #how to scale up and down, don't need usually cuz default good enough; 
  #scale up: if too high for 1 min; scale down: if too high for 5min (?)

