---
apiVersion: v1
kind: Service
metadata:
  name: bggapp-svc
  namespace: bggns
  labels:
    app: bgg
spec:
  type: ClusterIP
  # type: NodePort
  #type: LoadBalancer
  selector:
    app: bgg
    role: app
  ports:
  - name: web
    port: 3000         # Service port
    targetPort: 3000 # Container port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bggapp-deploy
  namespace: bggns
  labels:
    app: bgg
    role: app
spec:
  replicas: 3
  minReadySeconds: 5
  #strategy:
  #  type: RollingUpdate
  #  rollingUpdate:
  #    maxSurge: 1
  #    maxUnavailable: 0
  selector: 
    matchLabels:
      app: bgg
      role: app
  template:
    metadata:
      name: bggapp-pod
      namespace: bggns
      labels:
        app: bgg
        role: app
    spec: 
      containers:
      - name: bggapp
        #image: stackupiss/bgg-backend:v1
        image: stackupiss/bgg-backend:v2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          periodSeconds: 60
          successThreshold: 1
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: bgg-cm
        - secretRef:
            name: bgg-secret
        ports:
        - containerPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bggapp-img
  namespace: bggns
  labels:
    app: bgg
spec:
  ingressClassName: nginx
  rules:
  - host: bgg-146.190.201.32.nip.io #must put else will match anything
    http:
      paths:
      - path: / #any request starting with / will come here
        pathType: Prefix
        backend:
          service:
            name: bggapp-svc
            port:
              number: 3000

